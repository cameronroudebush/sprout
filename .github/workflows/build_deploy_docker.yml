name: Build Docker

on:
  push:
    branches: ["master"]
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Git Version and Tag Status
        id: git_info
        run: |
          # Get the version string using git describe --tags --always
          # This will give 'vX.Y.Z' if on a tag, or 'vX.Y.Z-N-g<hash>' if not directly on a tag.
          VERSION_STRING=$(git describe --tags --always)
          echo "version_string=$VERSION_STRING" >> $GITHUB_OUTPUT

          # Determine if the current commit is EXACTLY a tag (e.g., v1.0.0)
          # 'git describe --tags --exact-match' will succeed (exit code 0) if HEAD is a tag,
          # and fail (non-zero exit code) otherwise.
          if git describe --tags --exact-match > /dev/null 2>&1; then
            echo "is_tagged_commit=true" >> $GITHUB_OUTPUT
          else
            echo "is_tagged_commit=false" >> $GITHUB_OUTPUT
          fi

          echo "Detected VERSION_STRING: $VERSION_STRING"
          echo "Is Tagged Commit: ${{ steps.git_info.outputs.is_tagged_commit }}"

      - name: NPM Install
        run: npm i --only=dev && npm i --prefix ./backend --only=dev

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and Push 'dev' tag (always pushed on master branch builds OR tag builds)
      - name: Build and Publish 'dev' tag
        run: |
          IMAGE_NAME="croudebush/sprout"
          npm run build:docker $IMAGE_NAME:dev
          docker push $IMAGE_NAME:dev

      # Conditionally tag and publish the specific version tag if it's a tagged commit
      - name: Tag and Publish Version Tag
        if: ${{ steps.git_info.outputs.is_tagged_commit == 'true' }}
        run: |
          IMAGE_NAME="croudebush/sprout"
          TAG_VERSION="${{ steps.git_info.outputs.version_string }}"

          # Tag the already built 'dev' image with the version tag
          echo "Tagging image with version: $TAG_VERSION"
          docker tag $IMAGE_NAME:dev $IMAGE_NAME:$TAG_VERSION
          docker push $IMAGE_NAME:$TAG_VERSION

      # Conditionally tag and publish the 'stable' tag if it's a tagged commit
      - name: Tag and Publish 'stable' Tag
        if: ${{ steps.git_info.outputs.is_tagged_commit == 'true' }}
        run: |
          IMAGE_NAME="croudebush/sprout"
          # Tag the already built 'dev' image with the 'stable' tag
          echo "Tagging image with 'stable'"
          docker tag $IMAGE_NAME:dev $IMAGE_NAME:stable
          docker push $IMAGE_NAME:stable

      # Update dockerhub readme
      - name: Docker Hub Description
        if: ${{ steps.git_info.outputs.is_tagged_commit == 'true' }}
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: croudebush/sprout

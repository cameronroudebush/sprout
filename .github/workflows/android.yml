name: Build and Deploy Android

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to upload release assets

    env:
      ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: "true"

      - name: Get Repo Info
        id: get_repo_info
        uses: ./.github/actions/get-repo-info
        with:
          fetch-depth: "0"

      - name: Generate Changelogs
        id: generate_changelogs
        uses: ./.github/actions/generate-changelog
        with:
          starting-version: ${{ steps.get_repo_info.outputs.version_string }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          echo $ENCODED_STRING | base64 --decode > frontend/android/app/upload-keystore.jks

      - name: Set Keystore Path Environment Variable
        run: |
          echo "ANDROID_SIGNING_KEYSTORE_PATH=$GITHUB_WORKSPACE/frontend/android/app/upload-keystore.jks" >> $GITHUB_ENV

      - name: Make build script executable
        run: chmod +x scripts/build_app.sh

      - name: Build Android App Bundle (AAB)
        id: build_aab
        working-directory: ./frontend
        run: ../scripts/build_app.sh appbundle

      - name: Build Android APK for Release
        id: build_apk
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: ./frontend
        run: ../scripts/build_app.sh apk

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_JSON }}

      - name: Write Android Changelog to File
        run: |
          mkdir -p whatsnew/en-US
          echo "${{ steps.generate_changelogs.outputs.android_changelog }}" > whatsnew/en-US/whatsnew

      - name: Deploy to Google Play (QA)
        if: github.ref == 'refs/heads/master'
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
          packageName: net.croudebush.sprout
          releaseFiles: frontend/build/app/outputs/bundle/release/app-release.aab
          track: alpha # Internal testing. Should update to beta once production is allowed
          status: completed
          inAppUpdatePriority: 5
          whatsNewDirectory: whatsnew

      # - name: Deploy to Google Play (Production)
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: r0adkll/upload-google-play@v1.1.3
      #   with:
      #     serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
      #     packageName: net.croudebush.sprout
      #     releaseFiles: frontend/build/app/outputs/bundle/release/app-release.aab
      #     track: production
      #     status: completed
      #     inAppUpdatePriority: 2

      - name: Upload APK to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: "build/app/outputs/flutter-apk/app-release.apk"
          tag_name: ${{ steps.build_apk.outputs.build_name }}
          draft: false

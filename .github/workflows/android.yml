name: Build and Deploy Android

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to upload release assets

    env:
      ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: "true"

      - name: Get Repo Info
        id: get_repo_info
        uses: ./.github/actions/get-repo-info
        with:
          fetch-depth: "0"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"
          cache: true

      - name: Change to Frontend Directory
        run: cd frontend

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          echo $ENCODED_STRING | base64 --decode > frontend/android/app/upload-keystore.jks

      - name: Build Android APK
        working-directory: ./frontend
        run: flutter build apk --release --no-tree-shake-icons --build-name=${{ steps.get_repo_info.outputs.version_string }}

      - name: Build Android App Bundle (AAB)
        working-directory: ./frontend
        run: flutter build appbundle --release --no-tree-shake-icons --build-name=${{ steps.get_repo_info.outputs.version_string }}

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_JSON }}

      - name: Deploy to Google Play (QA)
        if: github.ref == 'refs/heads/master'
        uses: r0adkll/upload-google-play@v1
        with:
          packageName: net.croudebush.sprout
          releaseFile: frontend/build/app/outputs/bundle/release/app-release.aab
          track: qa
          status: completed

      - name: Deploy to Google Play (Production)
        if: startsWith(github.ref, 'refs/tags/')
        uses: r0adkll/upload-google-play@v1
        with:
          packageName: net.croudebush.sprout
          releaseFile: frontend/build/app/outputs/bundle/release/app-release.aab
          track: production
          status: completed

      - name: Upload APK to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: "frontend/build/app/outputs/flutter-apk/app-release.apk"
          tag_name: ${{ steps.get_repo_info.outputs.version_string }}
          # This action finds the existing draft release and uploads the file to it, then publishes it.
          draft: false

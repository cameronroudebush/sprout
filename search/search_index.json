{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p> <p></p> What is Sprout? <p>         Sprout is a financial management app designed to give you a clear, simple view of your money. We specialize in providing a daily snapshot of your         financial data by automatically tracking your accounts using financial APIs. This allows you to easily view things like account balances and stock         holdings, helping you stay on top of your financial health.       </p> Security <p>Anytime you're dealing with financial data, security is an important topic. Here is our stance on the security of Sprout</p> <ul> <li>           While we do know about account balances and transactions,           we do not keep any user authentication information related to your bank accounts.         </li> <li>All data transmission from the user interface to the backend is done securely.</li> </ul> Getting Started <p>For info on how to start using sprout today, checkout the docs.</p>"},{"location":"planned-features/","title":"Planned Features","text":"<p> <p></p> What's Next for Sprout? <p>         I'm a busy guy but I try my best to get new features built in my free time. Here is a non exhaustive list of features that we plan to add.       </p> Holdings <ul> <li>Live Pricing</li> </ul> Accounts <ul> <li>Overhauled individual account display</li> </ul> User Configuration <ul> <li>OIDC Support</li> <li>User Management</li> <li>Individual Providers per user</li> </ul> Providers <ul> <li>Zillow</li> </ul> Mobile Apps <ul> <li>Android Widgets</li> <li>Biometric auth</li> </ul>"},{"location":"privacy-policy/","title":"Privacy Policy","text":"Privacy Policy <p>This privacy policy is designed to inform you about how your data is handled when you use the Sprout application.</p> Data Ownership and Control <p>           Sprout is a self-hosted application, which means you, the user, have complete control and ownership of your data. The application is           designed to run on your own infrastructure, such as a personal server or computer.         </p> <p>           All data, including financial information, account balances, and transaction history, is stored exclusively on your self-hosted backend.           The developer of Sprout does not have any access to, or control over, your personal or financial information. </p> No Data Collection by the Developer <p>           The developer and any associated parties do not collect, store, or process any user data from your instance of the Sprout application. There are no           tracking mechanisms, analytics, or remote logging functions that transmit your information to us.         </p> <p>Your data remains entirely within your network connection you maintain and on your designated storage.</p> Your Responsibilities <p>As the self-hoster of the Sprout application, you are responsible for the security and management of your data. This includes:</p> <ul> <li>Securing your server and network.</li> <li>Backing up your data.</li> <li>Managing user access to your self-hosted instance.</li> </ul> Changes to this Policy <p>           This policy may be updated periodically to reflect changes in the application's functionality. We encourage you to review the latest version of this           policy on our website.         </p> Contact <p>If you have any questions about this privacy policy, you can contact the developer through the official GitHub repository.</p>"},{"location":"developer/","title":"Development Overview","text":"<p>Sprout is built with a mobile first approach using Flutter for its interfaces and a Nest.js backend.</p>"},{"location":"developer/#environment","title":"Environment","text":"<p>For development, we recommend using VS Code. The repository includes a VS Code workspace file that sets up recommended extensions and debug configurations. You can launch the debuggers directly from VS Code to run and debug both the Flutter frontend and Nest.js backend.</p>"},{"location":"developer/#useful-commands","title":"Useful Commands","text":"<p>To simplify common development tasks, several npm scripts have been created. These commands are run from the project's root directory.</p> <pre><code># Build the Docker image\nnpm run docker:build\n# Fixes code styling issues\nnpm run prettier:write\n# Serves mkdocs locally for doc updating\nnpm run docs:serve\n</code></pre>"},{"location":"developer/#contributions","title":"Contributions","text":"<p>For feature requests and bug reports, please open an issue on GitHub. We appreciate all reports and contributions!</p>"},{"location":"developer/api/","title":"API","text":""},{"location":"developer/configuration/","title":"Configuration","text":"<p>The configuration file, <code>sprout.config.yml</code>, is generated dynamically and placed next to the executable inside the container. Below are the available options with definitions.</p>"},{"location":"developer/configuration/#full-configuration","title":"Full Configuration","text":"sprout.config.yml<pre><code>providers:\n    # How often to perform data queries for data from providers. Default is once a day at 7am.\n    updateTime: 0 7 * * *\n    # SimpleFIN configuration: https://www.simplefin.org/\n    simpleFIN:\n        # This access token is acquired from SimpleFIN.\n        # Get one here: https://beta-bridge.simplefin.org/info/developers\n        accessToken:\n        # How many days to look back for transactional data.\n        lookBackDays: 7\n        # How many API calls we allow per day for this provider.\n        rateLimit: 24\n\n# Core server config options\nserver:\n    # The port to accept backend requests on.\n    port: 8001\n    # How long JWT's should stay valid for users\n    jwtExpirationTime: 30m\n\n# Database specific options\ndatabase:\n    # Configuration for performing database backups automatically\n    backup:\n        enabled: true\n        count: 30\n        time: 0 4 * * *\n        directory: /backups/database\n    # Must be one of: [sqlite]\n    type: sqlite\n    sqlite:\n        database: sprout.sqlite\n\n# Settings specific to transactions\ntransaction:\n    # When to check for stuck transactions. This includes things like stuck pending.\n    stuckTransactionTime: 0 3 * * *\n</code></pre>"},{"location":"developer/configuration/#environment-variables","title":"Environment Variables","text":"<p>Environment variables are supported to make it easier to not have to keep track of the config file manually. Use the prefix <code>sprout_</code> followed by the config path. Here are some common examples.</p> <pre><code>TZ: America/New_York\nsprout_server_port: 9000\nsprout_server_jwtExpirationTime: 7d\nsprout_providers_simpleFIN_accessToken: MY_ACCESS_TOKEN\n</code></pre> <p>You can see more of these examples in the setup guide.</p>"},{"location":"developer/known-issues/","title":"Known Issues","text":"<p>Just like every application, there's some issues that we just can't seem to fix because, normally, it's out of our hands. Below is a table of exactly that.</p>"},{"location":"developer/known-issues/#web-autofill","title":"Web Autofill","text":"<p>Some browsers that try to auto-fill with password managers may experience issues where the input flickers but nothing happens. Unfortunately, this is out of our hands and is reported directly to the flutter developers. We'll have to wait for a result on that to see if it gets fixed.</p> <p>In the meantime, we suggest using one of the App's as they won't have this issue.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#getting-started-with-sprout","title":"Getting Started with Sprout \ud83d\ude80","text":"<p>Welcome to Sprout! This guide will walk you through setting up, configuring, and using the application.</p> <p>Caution</p> <p>This application is in active development. We do not make any guarantees about capability, or security.</p> <p>Use at your own risk</p> <p>To get started, follow these guides in order:</p> <ol> <li>Installation: Set up Sprout using the recommended Docker method.</li> <li>Configuration: Learn about the available settings to customize your instance.</li> <li>Access: Connect to Sprout from your phone or desktop.</li> <li>Backups: Understand how to protect your financial data.</li> </ol>"},{"location":"getting-started/access/","title":"Accessing Sprout","text":"<p>Sprout is designed to be accessible wherever you are. You can use it on your mobile device through our App's or as a Progressive Web App (PWA).</p>"},{"location":"getting-started/access/#web-interface-access","title":"Web Interface Access","text":"<p>This is the primary way to interact with Sprout. Once the Docker container is running, you can connect to the web UI using one of two methods:</p> <ul> <li>Local Access: If you are on the same machine that is running Docker, you can access Sprout by navigating your web browser to <code>http://localhost</code>.<ul> <li>If you mapped the container to a different port (e.g., you used <code>-p 8080:80</code>), you would use that port instead (e.g., <code>http://localhost:8080</code>).</li> </ul> </li> <li>Reverse Proxy Access: If you've set up a reverse proxy to make Sprout available outside your home network or to use a custom domain with SSL, simply navigate to the URL you configured (e.g., <code>https://sprout.yourdomain.com</code>).<ul> <li>This is the recommended way to access Sprout for daily use, especially for setting up the PWA.</li> </ul> </li> </ul>"},{"location":"getting-started/access/#progressive-web-app-pwa","title":"Progressive Web App (PWA)","text":"<p>For an app-like experience on any device without installing anything from an app store, you can use the PWA.</p> <p>To install the PWA:</p> <ol> <li>Navigate to your Sprout instance in a modern mobile or desktop web browser (like Chrome, Safari, or Firefox).</li> <li>Open the browser's menu.</li> <li>Tap the \"Add to Home Screen\" or \"Install App\" option.</li> </ol> <p>An icon for Sprout will be added to your device's home screen, allowing you to launch it just like a native app.</p>"},{"location":"getting-started/access/#apps","title":"App's","text":""},{"location":"getting-started/access/#android","title":"Android","text":"<p>We offer a native Android application for the best possible mobile experience.</p>"},{"location":"getting-started/access/#google-play-store","title":"Google Play Store","text":"<p>The official app is available on the Google Play Store. It provides access to all of Sprout's features with a native interface.</p> <p>You must request access to this application as we are still in alpha. Please see here for how to do that.</p> <p>You can find the app here.</p>"},{"location":"getting-started/access/#ios","title":"IOS","text":"<p>As of right now, we do not offer an IOS app. This will hopefully change in the future. In the meantime, we suggest using PWA.</p>"},{"location":"getting-started/access/#beta-testing","title":"Beta Testing","text":"<p>For users who want to test upcoming features before they are released, we offer a closed testing program.</p> <p>To request access, please email the developer. You can find contact information on the developer's GitHub profile.</p>"},{"location":"getting-started/access/#manual-downloads","title":"Manual Downloads","text":"<p>If you'd rather not download the apps from an app store, you can also find them located on the releases as they occur.</p>"},{"location":"getting-started/backups/","title":"Backups","text":""},{"location":"getting-started/backups/#backing-up-your-data","title":"Backing Up Your Data","text":"<p>Your financial data is important. Sprout helps protect your data by creating automatic backups for you. While Sprout handles the creation of backups, you are still responsible for ensuring these backups are stored securely in an external location.</p>"},{"location":"getting-started/backups/#automatic-backups","title":"Automatic Backups","text":"<p>Sprout automatically creates a compressed backup of your entire database. This process runs at two specific times:</p> <ul> <li>Daily at 4:00 AM, based on the timezone set for the container.</li> <li>Every time the container starts up.</li> </ul> <p>This ensures you always have a recent backup available with no manual intervention required.</p>"},{"location":"getting-started/backups/#backup-location","title":"Backup Location","text":"<p>The automatic backups are stored in the backups sub-folder within your main Sprout data directory. Based on our installation examples, you would find the backup files here on your host machine:</p> <p><code>/appdata/sprout/backups/</code></p> <p>This is why we recommend mapping a volume to the entire /sprout directory in the container, as it ensures both your live database and your backups are saved to your host machine.</p>"},{"location":"getting-started/backups/#how-to-secure-your-backups","title":"How to Secure Your Backups","text":"<p>While Sprout creates the backups, you should periodically copy them to a separate, secure location. This protects you from hardware failure or other issues with your host machine.</p> <p>Simply navigate to the backup location on your host and copy the most recent backup files to another drive, a network share, or a cloud storage folder (like Google Drive or Dropbox).</p>"},{"location":"getting-started/configuration/","title":"Quick Configuration","text":""},{"location":"getting-started/configuration/#configuration","title":"Configuration","text":"<p>Sprout is configured using environment variables passed to the Docker container at startup.</p> <p>For a complete list of all available options, please see the Advanced Configuration guide.</p> Variable Required Default Description <code>sprout_providers_simpleFIN_accessToken</code> Yes Your access token URL for SimpleFIN Bridge, which is used to connect to your bank accounts securely. <code>sprout_server_jwtExpirationTime</code> No <code>30m</code> The duration for which a login session remains valid. Examples: <code>24h</code>, <code>30d</code>. <code>TZ</code> No <code>TZ/New_York</code> Sets the timezone for the container. A list of valid TZ values is available on Wikipedia."},{"location":"getting-started/installation/","title":"Installation","text":"<p>The recommended way to install Sprout is with a Docker image.</p>"},{"location":"getting-started/installation/#docker-setup","title":"Docker Setup","text":"<p>To get started, choose either the Docker Compose or Docker Run method below.</p> Docker ComposeDocker Run compose.yml<pre><code>services:\n  sprout:\n    container_name: sprout\n    image: croudebush/sprout:stable\n    volumes:\n      - /appdata/sprout:/sprout #(1)!\n    ports:\n      - 80:80\n    restart: unless-stopped\n    environment:\n      TZ: America/New_York\n      sprout_providers_simpleFIN_accessToken: ${SIMPLE_FIN_ACCESS_URL}\n      sprout_server_jwtExpirationTime: 7d\n</code></pre> <ol> <li>Sprout's configuration and database is under <code>/sprout</code>.</li> </ol> <pre><code>docker run -d \\\n  --name=sprout \\\n  -v /appdata/sprout:/sprout \\ # (1)!\n  -p 80:80 \\\n  -e TZ=America/New_York \\\n  -e sprout_providers_simpleFIN_accessToken=${SIMPLE_FIN_ACCESS_URL} \\\n  -e sprout_server_jwtExpirationTime=7d \\\n  --restart unless-stopped \\\n  croudebush/sprout:stable\n</code></pre> <ol> <li>Sprout's configuration and database is under <code>/sprout</code>.</li> </ol>"},{"location":"getting-started/installation/#docker-images","title":"Docker Images","text":"<p>Sprout offers Docker images to suit different needs.</p> <ul> <li><code>croudebush/sprout:stable</code>: (Recommended) This is the image for most users. It is only updated with tagged, stable releases from the <code>main</code> branch.</li> <li><code>croudebush/sprout:dev</code>: This image is tied directly to the <code>main</code> branch and updates with every commit. Use this for testing the latest features, but expect potential instability.</li> </ul>"},{"location":"getting-started/providers/","title":"Providers","text":"<p>Providers are how Sprout get's it's financial data. We use various providers and those are listed below.</p>"},{"location":"getting-started/providers/#simplefin","title":"SimpleFIN","text":"<p>For more information, visit the Simple FIN website.</p> <p>To configure the API, you must set the required environment variable or specify them in a configuration file. For detailed instructions, please refer to the quick configuration.</p>"}]}